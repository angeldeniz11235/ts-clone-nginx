server {
    listen [::]:80;
    listen 80;

    server_name angeld.xyz www.angeld.xyz;

    location ~ /.well-known/acme-challenge {
        allow all; 
        root /var/www/certbot;
    }

    # redirect http to https www
    return 301 https://www.angeld.xyz$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name angeld.xyz;

    # SSL code
    ssl_certificate /etc/nginx/ssl/live/www.angeld.xyz/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/www.angeld.xyz/privkey.pem;

    root /var/www/html;

    location / {
        index index.html;
    }

    return 301 https://www.angeld.xyz$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name www.angeld.xyz;

    # SSL code
    ssl_certificate /etc/nginx/ssl/live/www.angeld.xyz/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/www.angeld.xyz/privkey.pem;

    root /var/www/html/domain-name/public;

    # Add headers to serve security related headers (redirect to node website server)
     location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://angeld.xyz:3000;
    }

    # Add headers to serve security related headers (redirect to node api server)
     location /api/v1/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://angeld.xyz:3000/api/v1/;
    }
} 